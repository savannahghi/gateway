image: node:12

stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  GOOGLE_APPLICATION_CREDENTIALS: $CI_PROJECT_DIR/bewell-app-ci.json
  DOCKER_IMAGE_TAG: "eu.gcr.io/bewell-app/gateway:${CI_COMMIT_REF_SLUG}"
  GKE_ZONE: europe-west1-b
  GKE_PROJECT: bewell-app

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

lint_and_test:
  stage: test
  script:
    - echo This job does not need any test to add later

build:
  image: "eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1"
  stage: build
  only:
    - develop
    - master
  before_script:
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
    - /google-cloud-sdk/bin/gcloud auth configure-docker
  script:
    - docker build -q -f $CI_PROJECT_DIR/Dockerfile . -t ${DOCKER_IMAGE_TAG} --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg SECRET_PASSPHRASE --build-arg GOOGLE_APPLICATION_CREDENTIALS="$TEST_GOOGLE_APPLICATION_CREDENTIALS" --build-arg LOGIN_SERVICE_URL="$TEST_LOGIN_SERVICE_URL" --build-arg LOGIN_SERVICE_FLAVOUR="$TEST_LOGIN_SERVICE_FLAVOUR --build-arg SCHEMA_REGISTRY_URL=$TEST_SCHEMA_REGISTRY_URL"
    - docker -- push ${DOCKER_IMAGE_TAG}
  tags:
    - healthcloud-multi

deploy_to_test:
  image: devth/helm
  stage: deploy
  only:
    - develop
  before_script:
    - gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - gcloud config set project ${GKE_PROJECT}
    - gcloud config set compute/zone ${GKE_ZONE}
    - gcloud container clusters get-credentials gateway --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  resource_group: staging # control deploy concurrency
  script:
    - helm upgrade
      --install
      --namespace="gateway-test-namespace"
      --set app.release_name="test-app-release"
      --set app.image="${DOCKER_IMAGE_TAG}"
      --set app.project_id="${GKE_PROJECT}"
      --set app.name="gateway-app-test"
      --set app.namespace="gateway-test-namespace"
      --set app.replicaCount=1
      --set app.service.name="gateway-test-service"
      --set app.service.namespace="gateway-test-namespace"
      --set app.container.env.login_service_url="$TEST_LOGIN_SERVICE_URL"
      --set app.container.env.login_service_flavour="$TEST_LOGIN_SERVICE_FLAVOUR"
      --set app.container.env.schema_registry_url="$TEST_SCHEMA_REGISTRY_URL"
      --set app.container.env.debug="$DEBUG"
      --set app.container.env.apq_enabled="$APQ_ENABLED"
      --set app.container.env.service_check_health_enabled="false"
      --set app.container.env.polling_enabled="true"
      --set app.container.env.polling_interval="300000"
      --set app.container.env.subscriptions_enabled="$SUBSCRIPTIONS_ENABLED"
      --set app.container.env.introspection_enabled="$INTROSPECTION_ENABLED"
      --set app.container.env.playground_enabled="$PLAYGROUND_ENABLED"
      --set app.container.env.sentry_dns="$TESTING_SENTRY_DSN"
      --set app.container.env.port="$APP_PORT"
      --set app.container.env.jaeger_url="$TEST_JAEGER_URL_URL"
      --set app.service.port="$SERVICE_PORT"
      --set ingress.name="gateway-test-ingress"
      --set ingress.annotations.tls.acme="true"
      --set ingress.namespace="gateway-test-namespace"
      --set ingress.spec.rules.pathType="Prefix"
      --set ingress.annotations.acme.http_edit_in_place="true"
      --set ingress.host="$TEST_HOST_DOMAIN"
      --set ingress.annotations.class="kong"
      --set app.certificate.name="gateway-test-certificate"
      --set app.certificate.acme.email="calvine.otieno@healthcloud.co.ke"
      --set app.certificate.tls.acme="true"
      --set app.certificate.issuer.name="letsencrypt-prod"
      --set app.certificate.acme.server="https://acme-v02.api.letsencrypt.org/directory"
      --set app.readinesss_probe_initial_delay_seconds="$READINESSS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.readinesss_probe_period_seconds="$READINESSS_PROBE_PERIOD_SECONDS"
      --set app.liveness_probe_initial_delay_seconds="$LIVENESS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.liveness_probe_period_seconds="$LIVENESS_PROBE_PERIOD_SECONDS"
      --set app.secrets.name="gateway-secrets"
      --wait
      test-app-release
      ./deployment/k8s-chart
  tags:
    - healthcloud-multi

deploy_to_e2e:
  image: devth/helm
  stage: deploy
  only:
    - develop
  before_script:
    - gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - gcloud config set project ${GKE_PROJECT}
    - gcloud config set compute/zone ${GKE_ZONE}
    - gcloud container clusters get-credentials gateway --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  resource_group: staging # control deploy concurrency
  script:
    - helm upgrade
      --install
      --namespace="gateway-e2e-namespace"
      --set app.name="gateway-app-e2e"
      --set app.release_name="e2e-app-release"
      --set app.project_id="${GKE_PROJECT}"
      --set app.image="${DOCKER_IMAGE_TAG}"
      --set app.namespace="gateway-e2e-namespace"
      --set app.replicaCount=1
      --set app.service.name="gateway-e2e-service"
      --set app.service.namespace="gateway-e2e-namespace"
      --set app.container.env.login_service_url="$E2E_LOGIN_SERVICE_URL"
      --set app.container.env.login_service_flavour="$E2E_LOGIN_SERVICE_FLAVOUR"
      --set app.container.env.schema_registry_url="$E2E_SCHEMA_REGISTRY_URL"
      --set app.container.env.debug="$DEBUG"
      --set app.container.env.apq_enabled="$APQ_ENABLED"
      --set app.container.env.service_check_health_enabled="false"
      --set app.container.env.polling_enabled="true"
      --set app.container.env.polling_interval="300000"
      --set app.container.env.subscriptions_enabled="$SUBSCRIPTIONS_ENABLED"
      --set app.container.env.introspection_enabled="$INTROSPECTION_ENABLED"
      --set app.container.env.playground_enabled="$PLAYGROUND_ENABLED"
      --set app.container.env.sentry_dns="$TESTING_SENTRY_DSN"
      --set app.container.env.port="$APP_PORT"
      --set app.container.env.jaeger_url="$TEST_JAEGER_URL_URL"
      --set app.service.port="$SERVICE_PORT"
      --set ingress.name="gateway-e2e-ingress"
      --set ingress.annotations.tls.acme="true"
      --set ingress.namespace="gateway-e2e-namespace"
      --set ingress.host="$E2E_HOST_DOMAIN"
      --set ingress.spec.rules.pathType="Prefix"
      --set ingress.annotations.acme.http_edit_in_place="true"
      --set ingress.annotations.class="kong"
      --set app.certificate.name="gateway-e2e-certificate"
      --set app.certificate.acme.email="calvine.otieno@healthcloud.co.ke"
      --set app.certificate.tls.acme="true"
      --set app.certificate.issuer.name="letsencrypt-prod"
      --set app.certificate.acme.server="https://acme-v02.api.letsencrypt.org/directory"
      --set app.readinesss_probe_initial_delay_seconds="$READINESSS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.readinesss_probe_period_seconds="$READINESSS_PROBE_PERIOD_SECONDS"
      --set app.liveness_probe_initial_delay_seconds="$LIVENESS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.liveness_probe_period_seconds="$LIVENESS_PROBE_PERIOD_SECONDS"
      --set app.secrets.name="gateway-secrets"
      --wait
      e2e-app-release
      ./deployment/k8s-chart
  tags:
    - healthcloud-multi

deploy_master_to_demo:
  image: devth/helm
  stage: deploy
  only:
    - master
  before_script:
    - gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - gcloud config set project ${GKE_PROJECT}
    - gcloud config set compute/zone ${GKE_ZONE}
    - gcloud container clusters get-credentials gateway --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  resource_group: staging # control deploy concurrency
  script:
    - helm upgrade
      --install
      --namespace="gateway-demo-namespace"
      --set app.release_name="demo-app-release"
      --set app.image="${DOCKER_IMAGE_TAG}"
      --set app.project_id="${GKE_PROJECT}"
      --set app.name="gateway-app-demo"
      --set app.namespace="gateway-demo-namespace"
      --set app.replicaCount=1
      --set app.service.name="gateway-demo-service"
      --set app.service.namespace="gateway-demo-namespace"
      --set app.container.env.login_service_url="$DEMO_LOGIN_SERVICE_URL"
      --set app.container.env.login_service_flavour="$DEMO_LOGIN_SERVICE_FLAVOUR"
      --set app.container.env.schema_registry_url="$DEMO_SCHEMA_REGISTRY_URL"
      --set app.container.env.debug="$DEBUG"
      --set app.container.env.apq_enabled="$APQ_ENABLED"
      --set app.container.env.service_check_health_enabled="false"
      --set app.container.env.polling_enabled="true"
      --set app.container.env.polling_interval="300000"
      --set app.container.env.subscriptions_enabled="$SUBSCRIPTIONS_ENABLED"
      --set app.container.env.introspection_enabled="$INTROSPECTION_ENABLED"
      --set app.container.env.playground_enabled="$PLAYGROUND_ENABLED"
      --set app.container.env.sentry_dns="$TESTING_SENTRY_DSN"
      --set app.container.env.port="$APP_PORT"
      --set app.container.env.jaeger_url="$PROD_JAEGER_URL_URL"
      --set app.service.port="$SERVICE_PORT"
      --set ingress.name="gateway-demo-ingress"
      --set ingress.spec.rules.pathType="Prefix"
      --set ingress.annotations.acme.http_edit_in_place="true"
      --set ingress.annotations.tls.acme="true"
      --set ingress.namespace="gateway-demo-namespace"
      --set ingress.host="$DEMO_HOST_DOMAIN"
      --set ingress.annotations.class="kong"
      --set app.certificate.name="gateway-demo-certificate"
      --set app.certificate.acme.email="calvine.otieno@healthcloud.co.ke"
      --set app.certificate.tls.acme="true"
      --set app.certificate.issuer.name="letsencrypt-prod"
      --set app.certificate.acme.server="https://acme-v02.api.letsencrypt.org/directory"
      --set app.readinesss_probe_initial_delay_seconds="$READINESSS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.readinesss_probe_period_seconds="$READINESSS_PROBE_PERIOD_SECONDS"
      --set app.liveness_probe_initial_delay_seconds="$LIVENESS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.liveness_probe_period_seconds="$LIVENESS_PROBE_PERIOD_SECONDS"
      --set app.secrets.name="gateway-secrets"
      --wait
      demo-app-release
      ./deployment/k8s-chart
  tags:
    - healthcloud-multi

deploy_to_prod:
  image: devth/helm
  stage: deploy
  only:
    - master
  before_script:
    - gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - gcloud config set project ${GKE_PROJECT}
    - gcloud config set compute/zone ${GKE_ZONE}
    - gcloud container clusters get-credentials gateway --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  resource_group: staging # control deploy concurrency
  script:
    - helm upgrade
      --install
      --namespace="gateway-prod-namespace"
      --set app.release_name="gateway-prod-app-release"
      --set app.image="${DOCKER_IMAGE_TAG}"
      --set app.project_id="${GKE_PROJECT}"
      --set app.name="gateway-app-prod"
      --set app.namespace="gateway-prod-namespace"
      --set app.replicaCount=1
      --set app.service.name="gateway-prod-service"
      --set app.service.namespace="gateway-prod-namespace"
      --set app.container.env.login_service_url="$PROD_LOGIN_SERVICE_URL"
      --set app.container.env.login_service_flavour="$PROD_LOGIN_SERVICE_FLAVOUR"
      --set app.container.env.schema_registry_url="$PROD_SCHEMA_REGISTRY_URL"
      --set app.container.env.debug="$DEBUG"
      --set app.container.env.apq_enabled="$APQ_ENABLED"
      --set app.container.env.service_check_health_enabled="false"
      --set app.container.env.polling_enabled="true"
      --set app.container.env.polling_interval="300000"
      --set app.container.env.subscriptions_enabled="$SUBSCRIPTIONS_ENABLED"
      --set app.container.env.introspection_enabled="$PROD_INTROSPECTION_ENABLED"
      --set app.container.env.playground_enabled="$PROD_PLAYGROUND_ENABLED"
      --set app.container.env.sentry_dns="$PROD_SENTRY_DSN"
      --set app.container.env.port="$APP_PORT"
      --set app.container.env.jaeger_url="$PROD_JAEGER_URL_URL"
      --set app.service.port="$SERVICE_PORT"
      --set ingress.spec.rules.pathType="Prefix"
      --set ingress.annotations.acme.http_edit_in_place="true"
      --set ingress.name="gateway-prod-ingress"
      --set ingress.annotations.tls.acme="true"
      --set ingress.namespace="gateway-prod-namespace"
      --set ingress.host="$PROD_HOST_DOMAIN"
      --set ingress.annotations.class="kong"
      --set app.certificate.name="gateway-prod-certificate"
      --set app.certificate.acme.email="calvine.otieno@healthcloud.co.ke"
      --set app.certificate.tls.acme="true"
      --set app.certificate.issuer.name="letsencrypt-prod"
      --set app.certificate.acme.server="https://acme-v02.api.letsencrypt.org/directory"
      --set app.readinesss_probe_initial_delay_seconds="$READINESSS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.readinesss_probe_period_seconds="$READINESSS_PROBE_PERIOD_SECONDS"
      --set app.liveness_probe_initial_delay_seconds="$LIVENESS_PROBE_INITIAL_DELAY_SECONDS"
      --set app.liveness_probe_period_seconds="$LIVENESS_PROBE_PERIOD_SECONDS"
      --set app.secrets.name="gateway-secrets"
      --wait
      gateway-prod-app-release
      ./deployment/k8s-chart
  tags:
    - healthcloud-multi
